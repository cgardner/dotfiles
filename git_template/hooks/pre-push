#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).

#!/bin/bash

validate_last_command() {
	if [ $? -ne 0 ]; then
		echo "Unable to commit, validation failure"
		exit 1
	fi
}

build_maven() {
    local MVN=`which mvn`
    
    $MVN clean verify
    validate_last_command
}

build_ant() {
    local ANT=`which ant`

    $ANT build-parallel
    validate_last_command
}

build_grunt() {
    local GRUNT=`which grunt`

    $GRUNT
    validate_last_command
}

git stash

if [ -e "pom.xml" ]; then
    build_maven
fi

if [ -e "build.xml" ]; then
    build_ant
fi

git stash pop
exit 0
